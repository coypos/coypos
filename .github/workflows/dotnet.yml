# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Notify discord
      uses: th0th/notify-discord@v0.4.1
      if: failure()
      env:
        DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK }}
        GITHUB_ACTOR: ${{ github.actor }}
        GITHUB_JOB_NAME: "API Testy jednostkowe i e2e @everyone"
        GITHUB_JOB_STATUS: ${{ job.status }}
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Deploy using ssh
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        port: 2137
        script: |
          cd /srv/coypos
          sudo rm .env
          git pull origin main
          git status
          touch .env
          echo DB_USER=${{ secrets.DB_USER }} >> .env
          echo DB_PASS=${{ secrets.DB_PASS }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }}  >> .env
          sudo docker-compose kill
          sudo docker-compose rm -f
          sudo docker image prune -af
          sudo docker-compose up -d
    - name: Notify discord
      uses: th0th/notify-discord@v0.4.1
      if: ${{ always() }}
      env:
        DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK }}
        GITHUB_ACTOR: ${{ github.actor }}
        GITHUB_JOB_NAME: "API Deploy na serwer"
        GITHUB_JOB_STATUS: ${{ job.status }}
